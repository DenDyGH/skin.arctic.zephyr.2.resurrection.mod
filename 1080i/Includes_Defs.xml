<?xml version="1.0" encoding="UTF-8"?>
<includes>

    <include name="Defs_Progress_Gradient">
        <control type="progress" id="$PARAM[id]">
            <nested />
        </control>
        <control type="progress">
            <description>Progressbar</description>
            <top>$PARAM[top]</top>
            <nested />
            <texturebg colordiffuse="00ffffff" border="4">diffuse/progress-bg.png</texturebg>
            <lefttexture colordiffuse="00ffffff" border="4">diffuse/progress-left.png</lefttexture>
            <midtexture colordiffuse="$VAR[ColorGradient]" border="4" diffuse="progress/diffuse.png">diffuse/progress-end.png</midtexture>
            <righttexture colordiffuse="$VAR[ColorGradient]" border="4" diffuse="progress/diffuse-end.png">diffuse/progress-right.png</righttexture>
            <include content="Defs_Progress_Colorfade">
                <param name="id" value="$PARAM[id]" />
            </include>
            <visible>!Skin.HasSetting(EnableMonochromeHighlight)</visible>
        </control>
    </include>

    <variable name="Defs_SettingsPanel_NF">
        <!-- <value condition="Skin.HasSetting(DisableGeometric) + !String.IsEqual(Skin.CurrentColorTheme,SKINDEFAULT)">panel_fg_30</value> -->
        <value>panel_fg_70</value>
    </variable>

    <variable name="Defs_ThemeSwitcher_StartTime">
        <value>06:00</value>
    </variable>

    <variable name="Defs_WidgetTextContrast_Start">
        <value condition="Skin.HasSetting(EnableHighContrastWidgetText)">70</value>
        <value>40</value>
    </variable>

    <variable name="Defs_WidgetTextContrast_End">
        <value condition="Skin.HasSetting(EnableHighContrastWidgetText)">70</value>
        <value>40</value>
    </variable>

    <variable name="Defs_ItemLayout_LeftSideObjectSlideVertical">
        <value condition="!String.IsEqual(ListItem.DBType,episode) + !$EXP[FontSetIsMediumOrLarger]">-40</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + !Integer.IsGreater(ListItem.Season,999) + !$EXP[FontSetIsMediumOrLarger]">-30</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + Integer.IsGreater(ListItem.Episode,99) + !$EXP[FontSetIsMediumOrLarger]">15</value>
        <value condition="!String.IsEqual(ListItem.DBType,episode) + $EXP[FontSetIsMediumOrLarger]">-30</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + !Integer.IsGreater(ListItem.Season,999) + $EXP[FontSetIsMediumOrLarger]">-20</value>
        <value condition="String.IsEqual(ListItem.DBType,episode) + Integer.IsGreater(ListItem.Episode,99) + $EXP[FontSetIsMediumOrLarger]">5</value>
        <value>0</value>
    </variable>

    <include name="Defs_PauseAtEnd_Value">
        <pauseatend>$PARAM[time]</pauseatend>
    </include>

    <include name="Defs_PauseAtEnd">
        <include content="Defs_AutoScroll">
            <param name="include" value="Defs_PauseAtEnd_Value" />
        </include>
    </include>

    <include name="Defs_TimePerImage_Value">
        <timeperimage>$PARAM[time]</timeperimage>
    </include>

    <include name="Defs_TimePerImage">
        <include content="Defs_AutoScroll">
            <param name="include" value="Defs_TimePerImage_Value" />
        </include>
    </include>

    <include name="Defs_AutoScroll_Value">
        <autoscroll time="$PARAM[time]">$PARAM[condition]</autoscroll>
    </include>

    <include name="Defs_AutoScroll">
        <param name="include" default="Defs_AutoScroll_Value" />
        <definition>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31117])">
                <param name="time" value="10000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31122]) | String.IsEmpty(Skin.String(AutoScroll))">
                <param name="time" value="12000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31123])">
                <param name="time" value="15000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31124])">
                <param name="time" value="20000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31125])">
                <param name="time" value="30000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31126])">
                <param name="time" value="60000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
            <include content="$PARAM[include]" condition="String.IsEqual(Skin.String(AutoScroll),$LOCALIZE[31127])">
                <param name="time" value="600000" />
                <param name="condition" value="$PARAM[condition]" />
            </include>
        </definition>
    </include>

    <variable name="Defs_Widget_Target">
        <value condition="String.IsEqual(Skin.String(widgetTarget),video)">videos</value>
        <value>$INFO[Skin.String(widgetTarget)]</value>
    </variable>

    <variable name="Defs_Volume_Colordiffuse">
        <value condition="Window.IsVisible(Home) + !Skin.HasSetting(HomeMulti) + ![Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml)]">panel_fg_100</value>
        <value>main_fg_100</value>
    </variable>

    <include name="Defs_Settings_Texture">
        <control type="group">
            <nested />
            <animation effect="fade" start="0" end="100" time="1">Visible</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,0)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,1)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,2)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,3)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,4)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,5)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,6)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,7)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,8)">Conditional</animation>
            <animation effect="slide" end="0,item_list_height" condition="Integer.IsGreater(Container($PARAM[id]).Position,9)">Conditional</animation>
            <control type="image">
                <texture>special://userdata/addon_data/script.skinhelper/button_texture.png</texture>
            </control>
        </control>
    </include>

    <include name="Defs_Progress_Colorfader">
        <animation effect="fade" start="100" end="0" condition="Integer.IsEqual($PARAM[info],0)">Conditional</animation>
        <animation effect="fade" start="100" end="1" condition="Integer.IsEqual($PARAM[info],1)">Conditional</animation>
        <animation effect="fade" start="100" end="2" condition="Integer.IsEqual($PARAM[info],2)">Conditional</animation>
        <animation effect="fade" start="100" end="3" condition="Integer.IsEqual($PARAM[info],3)">Conditional</animation>
        <animation effect="fade" start="100" end="4" condition="Integer.IsEqual($PARAM[info],4)">Conditional</animation>
        <animation effect="fade" start="100" end="5" condition="Integer.IsEqual($PARAM[info],5)">Conditional</animation>
        <animation effect="fade" start="100" end="6" condition="Integer.IsEqual($PARAM[info],6)">Conditional</animation>
        <animation effect="fade" start="100" end="7" condition="Integer.IsEqual($PARAM[info],7)">Conditional</animation>
        <animation effect="fade" start="100" end="8" condition="Integer.IsEqual($PARAM[info],8)">Conditional</animation>
        <animation effect="fade" start="100" end="9" condition="Integer.IsEqual($PARAM[info],9)">Conditional</animation>
        <animation effect="fade" start="100" end="10" condition="Integer.IsEqual($PARAM[info],10)">Conditional</animation>
        <animation effect="fade" start="100" end="11" condition="Integer.IsEqual($PARAM[info],11)">Conditional</animation>
        <animation effect="fade" start="100" end="12" condition="Integer.IsEqual($PARAM[info],12)">Conditional</animation>
        <animation effect="fade" start="100" end="13" condition="Integer.IsEqual($PARAM[info],13)">Conditional</animation>
        <animation effect="fade" start="100" end="14" condition="Integer.IsEqual($PARAM[info],14)">Conditional</animation>
        <animation effect="fade" start="100" end="15" condition="Integer.IsEqual($PARAM[info],15)">Conditional</animation>
        <animation effect="fade" start="100" end="16" condition="Integer.IsEqual($PARAM[info],16)">Conditional</animation>
        <animation effect="fade" start="100" end="17" condition="Integer.IsEqual($PARAM[info],17)">Conditional</animation>
        <animation effect="fade" start="100" end="18" condition="Integer.IsEqual($PARAM[info],18)">Conditional</animation>
        <animation effect="fade" start="100" end="19" condition="Integer.IsEqual($PARAM[info],19)">Conditional</animation>
        <animation effect="fade" start="100" end="20" condition="Integer.IsEqual($PARAM[info],20)">Conditional</animation>
        <animation effect="fade" start="100" end="21" condition="Integer.IsEqual($PARAM[info],21)">Conditional</animation>
        <animation effect="fade" start="100" end="22" condition="Integer.IsEqual($PARAM[info],22)">Conditional</animation>
        <animation effect="fade" start="100" end="23" condition="Integer.IsEqual($PARAM[info],23)">Conditional</animation>
        <animation effect="fade" start="100" end="24" condition="Integer.IsEqual($PARAM[info],24)">Conditional</animation>
        <animation effect="fade" start="100" end="25" condition="Integer.IsEqual($PARAM[info],25)">Conditional</animation>
        <animation effect="fade" start="100" end="26" condition="Integer.IsEqual($PARAM[info],26)">Conditional</animation>
        <animation effect="fade" start="100" end="27" condition="Integer.IsEqual($PARAM[info],27)">Conditional</animation>
        <animation effect="fade" start="100" end="28" condition="Integer.IsEqual($PARAM[info],28)">Conditional</animation>
        <animation effect="fade" start="100" end="29" condition="Integer.IsEqual($PARAM[info],29)">Conditional</animation>
        <animation effect="fade" start="100" end="30" condition="Integer.IsEqual($PARAM[info],30)">Conditional</animation>
        <animation effect="fade" start="100" end="31" condition="Integer.IsEqual($PARAM[info],31)">Conditional</animation>
        <animation effect="fade" start="100" end="32" condition="Integer.IsEqual($PARAM[info],32)">Conditional</animation>
        <animation effect="fade" start="100" end="33" condition="Integer.IsEqual($PARAM[info],33)">Conditional</animation>
        <animation effect="fade" start="100" end="34" condition="Integer.IsEqual($PARAM[info],34)">Conditional</animation>
        <animation effect="fade" start="100" end="35" condition="Integer.IsEqual($PARAM[info],35)">Conditional</animation>
        <animation effect="fade" start="100" end="36" condition="Integer.IsEqual($PARAM[info],36)">Conditional</animation>
        <animation effect="fade" start="100" end="37" condition="Integer.IsEqual($PARAM[info],37)">Conditional</animation>
        <animation effect="fade" start="100" end="38" condition="Integer.IsEqual($PARAM[info],38)">Conditional</animation>
        <animation effect="fade" start="100" end="39" condition="Integer.IsEqual($PARAM[info],39)">Conditional</animation>
        <animation effect="fade" start="100" end="40" condition="Integer.IsEqual($PARAM[info],40)">Conditional</animation>
        <animation effect="fade" start="100" end="41" condition="Integer.IsEqual($PARAM[info],41)">Conditional</animation>
        <animation effect="fade" start="100" end="42" condition="Integer.IsEqual($PARAM[info],42)">Conditional</animation>
        <animation effect="fade" start="100" end="43" condition="Integer.IsEqual($PARAM[info],43)">Conditional</animation>
        <animation effect="fade" start="100" end="44" condition="Integer.IsEqual($PARAM[info],44)">Conditional</animation>
        <animation effect="fade" start="100" end="45" condition="Integer.IsEqual($PARAM[info],45)">Conditional</animation>
        <animation effect="fade" start="100" end="46" condition="Integer.IsEqual($PARAM[info],46)">Conditional</animation>
        <animation effect="fade" start="100" end="47" condition="Integer.IsEqual($PARAM[info],47)">Conditional</animation>
        <animation effect="fade" start="100" end="48" condition="Integer.IsEqual($PARAM[info],48)">Conditional</animation>
        <animation effect="fade" start="100" end="49" condition="Integer.IsEqual($PARAM[info],49)">Conditional</animation>
        <animation effect="fade" start="100" end="50" condition="Integer.IsEqual($PARAM[info],50)">Conditional</animation>
        <animation effect="fade" start="100" end="51" condition="Integer.IsEqual($PARAM[info],51)">Conditional</animation>
        <animation effect="fade" start="100" end="52" condition="Integer.IsEqual($PARAM[info],52)">Conditional</animation>
        <animation effect="fade" start="100" end="53" condition="Integer.IsEqual($PARAM[info],53)">Conditional</animation>
        <animation effect="fade" start="100" end="54" condition="Integer.IsEqual($PARAM[info],54)">Conditional</animation>
        <animation effect="fade" start="100" end="55" condition="Integer.IsEqual($PARAM[info],55)">Conditional</animation>
        <animation effect="fade" start="100" end="56" condition="Integer.IsEqual($PARAM[info],56)">Conditional</animation>
        <animation effect="fade" start="100" end="57" condition="Integer.IsEqual($PARAM[info],57)">Conditional</animation>
        <animation effect="fade" start="100" end="58" condition="Integer.IsEqual($PARAM[info],58)">Conditional</animation>
        <animation effect="fade" start="100" end="59" condition="Integer.IsEqual($PARAM[info],59)">Conditional</animation>
        <animation effect="fade" start="100" end="60" condition="Integer.IsEqual($PARAM[info],60)">Conditional</animation>
        <animation effect="fade" start="100" end="61" condition="Integer.IsEqual($PARAM[info],61)">Conditional</animation>
        <animation effect="fade" start="100" end="62" condition="Integer.IsEqual($PARAM[info],62)">Conditional</animation>
        <animation effect="fade" start="100" end="63" condition="Integer.IsEqual($PARAM[info],63)">Conditional</animation>
        <animation effect="fade" start="100" end="64" condition="Integer.IsEqual($PARAM[info],64)">Conditional</animation>
        <animation effect="fade" start="100" end="65" condition="Integer.IsEqual($PARAM[info],65)">Conditional</animation>
        <animation effect="fade" start="100" end="66" condition="Integer.IsEqual($PARAM[info],66)">Conditional</animation>
        <animation effect="fade" start="100" end="67" condition="Integer.IsEqual($PARAM[info],67)">Conditional</animation>
        <animation effect="fade" start="100" end="68" condition="Integer.IsEqual($PARAM[info],68)">Conditional</animation>
        <animation effect="fade" start="100" end="69" condition="Integer.IsEqual($PARAM[info],69)">Conditional</animation>
        <animation effect="fade" start="100" end="70" condition="Integer.IsEqual($PARAM[info],70)">Conditional</animation>
        <animation effect="fade" start="100" end="71" condition="Integer.IsEqual($PARAM[info],71)">Conditional</animation>
        <animation effect="fade" start="100" end="72" condition="Integer.IsEqual($PARAM[info],72)">Conditional</animation>
        <animation effect="fade" start="100" end="73" condition="Integer.IsEqual($PARAM[info],73)">Conditional</animation>
        <animation effect="fade" start="100" end="74" condition="Integer.IsEqual($PARAM[info],74)">Conditional</animation>
        <animation effect="fade" start="100" end="75" condition="Integer.IsEqual($PARAM[info],75)">Conditional</animation>
        <animation effect="fade" start="100" end="76" condition="Integer.IsEqual($PARAM[info],76)">Conditional</animation>
        <animation effect="fade" start="100" end="77" condition="Integer.IsEqual($PARAM[info],77)">Conditional</animation>
        <animation effect="fade" start="100" end="78" condition="Integer.IsEqual($PARAM[info],78)">Conditional</animation>
        <animation effect="fade" start="100" end="79" condition="Integer.IsEqual($PARAM[info],79)">Conditional</animation>
        <animation effect="fade" start="100" end="80" condition="Integer.IsEqual($PARAM[info],80)">Conditional</animation>
        <animation effect="fade" start="100" end="81" condition="Integer.IsEqual($PARAM[info],81)">Conditional</animation>
        <animation effect="fade" start="100" end="82" condition="Integer.IsEqual($PARAM[info],82)">Conditional</animation>
        <animation effect="fade" start="100" end="83" condition="Integer.IsEqual($PARAM[info],83)">Conditional</animation>
        <animation effect="fade" start="100" end="84" condition="Integer.IsEqual($PARAM[info],84)">Conditional</animation>
        <animation effect="fade" start="100" end="85" condition="Integer.IsEqual($PARAM[info],85)">Conditional</animation>
        <animation effect="fade" start="100" end="86" condition="Integer.IsEqual($PARAM[info],86)">Conditional</animation>
        <animation effect="fade" start="100" end="87" condition="Integer.IsEqual($PARAM[info],87)">Conditional</animation>
        <animation effect="fade" start="100" end="88" condition="Integer.IsEqual($PARAM[info],88)">Conditional</animation>
        <animation effect="fade" start="100" end="89" condition="Integer.IsEqual($PARAM[info],89)">Conditional</animation>
        <animation effect="fade" start="100" end="90" condition="Integer.IsEqual($PARAM[info],90)">Conditional</animation>
        <animation effect="fade" start="100" end="91" condition="Integer.IsEqual($PARAM[info],91)">Conditional</animation>
        <animation effect="fade" start="100" end="92" condition="Integer.IsEqual($PARAM[info],92)">Conditional</animation>
        <animation effect="fade" start="100" end="93" condition="Integer.IsEqual($PARAM[info],93)">Conditional</animation>
        <animation effect="fade" start="100" end="94" condition="Integer.IsEqual($PARAM[info],94)">Conditional</animation>
        <animation effect="fade" start="100" end="95" condition="Integer.IsEqual($PARAM[info],95)">Conditional</animation>
        <animation effect="fade" start="100" end="96" condition="Integer.IsEqual($PARAM[info],96)">Conditional</animation>
        <animation effect="fade" start="100" end="97" condition="Integer.IsEqual($PARAM[info],97)">Conditional</animation>
        <animation effect="fade" start="100" end="98" condition="Integer.IsEqual($PARAM[info],98)">Conditional</animation>
        <animation effect="fade" start="100" end="99" condition="Integer.IsEqual($PARAM[info],99)">Conditional</animation>
    </include>

    <include name="Defs_Progress_Colorfade">
        <include content="Defs_Progress_Colorfader">
            <param name="info" value="Control.GetLabel($PARAM[id])" />
        </include>
    </include>

    <include name="Defs_InfoList_OnBack">
        <onback condition="!Skin.HasSetting(EnableExtendedInfo)">SetFocus(50)</onback>
        <onback>SetFocus(5000)</onback>
        <onback>300</onback>
    </include>

    <include name="Defs_InfoList_OnClick">
        <param name="prevent_del" default="prevent_del" />
        <definition>
            <onclick condition="!Skin.HasSetting(EnableExtendedInfo)">SetFocus(50)</onclick>
            <onclick>SetFocus(5000)</onclick>
            <onclick>SetFocus(300)</onclick>
            <onclick condition="String.IsEmpty(ListItem.DBID) | [!String.IsEqual(ListItem.DBType,movie) + !String.IsEqual(ListItem.DBType,tvshow)]">RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.FolderPath],call_auto=1190)</onclick>
            <onclick condition="!String.IsEmpty(ListItem.DBID) + String.IsEqual(ListItem.DBType,movie)">RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.Label,videodb://movies/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22,%22%5D%7D%5D%7D%2C%22type%22%3A%22movies%22%7D],call_auto=1190)</onclick>
            <onclick condition="!String.IsEmpty(ListItem.DBID) + String.IsEqual(ListItem.DBType,tvshow)">RunScript(plugin.video.themoviedb.helper,add_path=$INFO[ListItem.Label,videodb://tvshows/titles/?xsp=%7B%22order%22%3A%7B%22direction%22%3A%22ascending%22%2C%22ignorefolders%22%3A0%2C%22method%22%3A%22sorttitle%22%7D%2C%22rules%22%3A%7B%22and%22%3A%5B%7B%22field%22%3A%22title%22%2C%22operator%22%3A%22is%22%2C%22value%22%3A%5B%22,%22%5D%7D%5D%7D%2C%22type%22%3A%22tvshows%22%7D],call_auto=1190)</onclick>
        </definition>
    </include>

    <include name="Defs_Null">
        <description>Nothing</description>
    </include>

    <variable name="Defs_Target">
        <value condition="String.IsEqual(ListItem.DBType,album) | String.IsEqual(ListItem.DBType,artist) | String.IsEqual(ListItem.DBType,song)">music</value>
        <value>videos</value>
    </variable>

    <variable name="Defs_5610_Target">
        <value condition="String.IsEqual(Container(5610).ListItemAbsolute(0).DBType,album) | String.IsEqual(Container(5610).ListItemAbsolute(0).DBType,artist) | String.IsEqual(Container(5610).ListItemAbsolute(0).DBType,song)">music</value>
        <value>videos</value>
    </variable>

    <include name="Defs_ButtonList">
        <left>-35</left>
        <align>left</align>
        <height>60</height>
        <bottom>-15</bottom>
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
    </include>

    <include name="Defs_ShadowBack_Fullscreen">
        <right>-250</right>
        <top>-50</top>
        <texture>common/shadowspot.png</texture>
        <height>228</height>
        <width>1100</width>
        <include>Animation_FadeIn_Slide</include>
        <!-- <visible>VideoPlayer.IsFullscreen | Window.IsVisible(MusicVisualisation.xml)</visible> -->
    </include>

    <variable name="Defs_VideoInfo_Extras">
        <value condition="Container.Content(movies) + String.IsEmpty(Window(home).Property(SpecialFeatures.Widget)) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.Path,,/Extras/]</value>
        <value condition="!Container.Content(movies) + String.IsEmpty(Window(home).Property(SpecialFeatures.Widget)) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[ListItem.FileNameAndPath,,Extras/]</value>
        <value condition="!String.IsEmpty(Window(home).Property(SpecialFeatures.Widget)) + !String.StartsWith(ListItem.Path,plugin://)">$INFO[Window(home).Property(SpecialFeatures.Widget)]</value>
    </variable>

    <variable name="Def_Cast_List">
        <value condition="!String.IsEmpty(ListItem.Cast)">plugin://plugin.video.themoviedb.helper?info=cast&amp;type=movie&amp;imdb_id=$INFO[ListItem.IMDBNumber]</value>
    </variable>

    <variable name="Def_Set_List">
        <value condition="!Skin.HasSetting(DisableExtendedInfo) + !String.IsEmpty(ListItem.Set)">plugin://plugin.video.themoviedb.helper/?info=collection&amp;type=movie&amp;query=$INFO[ListItem.Set]&amp;nextpage=false</value>
        <value condition="!String.IsEmpty(ListItem.Set)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22set%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Set]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Def_Similar_List">
        <value condition="!Skin.HasSetting(DisableExtendedInfo) + String.IsEqual(ListItem.DBType,tvshow)">plugin://plugin.video.themoviedb.helper?info=similar&amp;type=tv&amp;query=$INFO[ListItem.Label]</value>
        <value condition="!Skin.HasSetting(DisableExtendedInfo) + String.IsEqual(ListItem.DBType,movie)">plugin://plugin.video.themoviedb.helper?info=similar&amp;type=movie&amp;query=$INFO[ListItem.Label]</value>
        <value condition="String.IsEqual(ListItem.DBType,movie)">plugin://plugin.video.themoviedb.helper?info=similar&amp;type=movie&amp;imdb_id=$INFO[ListItem.IMDBNumber]</value>
        <value condition="String.IsEqual(ListItem.DBType,tvshow)">plugin://plugin.video.themoviedb.helper?info=similar&amp;type=tv&amp;imdb_id=$INFO[ListItem.IMDBNumber]</value>
    </variable>

    <variable name="Def_Director_List">
        <value condition="!Skin.HasSetting(DisableExtendedInfo)">plugin://plugin.video.themoviedb.helper/?info=crew_in_movies&amp;type=person&amp;filter_key=job&amp;filter_value=Director&amp;query=$INFO[ListItem.Director]&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]&amp;nextpage=false</value>
        <value>videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22director%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Director]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Def_Studio_List">
        <value condition="!Skin.HasSetting(DisableExtendedInfo) + String.IsEqual(ListItem.DBType,tvshow)">plugin://plugin.video.themoviedb.helper?info=discover&amp;type=tv&amp;with_companies=$INFO[Window(Home).Property(TMDBHelper.ListItem.Studio.1.TMDB_ID)]&amp;with_id=True&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]&amp;nextpage=false</value>
        <value condition="Skin.HasSetting(DisableExtendedInfo) + String.IsEqual(ListItem.DBType,tvshow)">videodb://tvshows/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22studio%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Studio]%22%5d%7d%5d%7d%2c%22type%22%3a%22tvshows%22%7d</value>
        <value condition="!Skin.HasSetting(DisableExtendedInfo)">plugin://plugin.video.themoviedb.helper?info=discover&amp;type=movie&amp;with_companies=$INFO[Window(Home).Property(TMDBHelper.ListItem.Studio.1.TMDB_ID)]&amp;with_id=True&amp;exclude_key=title&amp;exclude_value=$INFO[ListItem.Title]&amp;nextpage=false</value>
        <value condition="Skin.HasSetting(DisableExtendedInfo)">videodb://movies/titles/?xsp=%7b%22rules%22%3a%7b%22and%22%3a%5b%7b%22field%22%3a%22studio%22%2c%22operator%22%3a%22is%22%2c%22value%22%3a%5b%22$INFO[ListItem.Studio]%22%5d%7d%5d%7d%2c%22type%22%3a%22movies%22%7d</value>
    </variable>

    <variable name="Def_Percentage_Rating">
        <value condition="String.IsEqual(ListItem.Rating,0.1)">1</value>
        <value condition="String.IsEqual(ListItem.Rating,0.2)">2</value>
        <value condition="String.IsEqual(ListItem.Rating,0.3)">3</value>
        <value condition="String.IsEqual(ListItem.Rating,0.4)">4</value>
        <value condition="String.IsEqual(ListItem.Rating,0.5)">5</value>
        <value condition="String.IsEqual(ListItem.Rating,0.6)">6</value>
        <value condition="String.IsEqual(ListItem.Rating,0.7)">7</value>
        <value condition="String.IsEqual(ListItem.Rating,0.8)">8</value>
        <value condition="String.IsEqual(ListItem.Rating,0.9)">9</value>
        <value condition="String.IsEqual(ListItem.Rating,1)">10</value>
        <value condition="String.IsEqual(ListItem.Rating,1.0)">10</value>
        <value condition="String.IsEqual(ListItem.Rating,1.1)">11</value>
        <value condition="String.IsEqual(ListItem.Rating,1.2)">12</value>
        <value condition="String.IsEqual(ListItem.Rating,1.3)">13</value>
        <value condition="String.IsEqual(ListItem.Rating,1.4)">14</value>
        <value condition="String.IsEqual(ListItem.Rating,1.5)">15</value>
        <value condition="String.IsEqual(ListItem.Rating,1.6)">16</value>
        <value condition="String.IsEqual(ListItem.Rating,1.7)">17</value>
        <value condition="String.IsEqual(ListItem.Rating,1.8)">18</value>
        <value condition="String.IsEqual(ListItem.Rating,1.9)">19</value>
        <value condition="String.IsEqual(ListItem.Rating,2)">20</value>
        <value condition="String.IsEqual(ListItem.Rating,2.0)">20</value>
        <value condition="String.IsEqual(ListItem.Rating,2.1)">21</value>
        <value condition="String.IsEqual(ListItem.Rating,2.2)">22</value>
        <value condition="String.IsEqual(ListItem.Rating,2.3)">23</value>
        <value condition="String.IsEqual(ListItem.Rating,2.4)">24</value>
        <value condition="String.IsEqual(ListItem.Rating,2.5)">25</value>
        <value condition="String.IsEqual(ListItem.Rating,2.6)">26</value>
        <value condition="String.IsEqual(ListItem.Rating,2.7)">27</value>
        <value condition="String.IsEqual(ListItem.Rating,2.8)">28</value>
        <value condition="String.IsEqual(ListItem.Rating,2.9)">29</value>
        <value condition="String.IsEqual(ListItem.Rating,3)">30</value>
        <value condition="String.IsEqual(ListItem.Rating,3.0)">30</value>
        <value condition="String.IsEqual(ListItem.Rating,3.1)">31</value>
        <value condition="String.IsEqual(ListItem.Rating,3.2)">32</value>
        <value condition="String.IsEqual(ListItem.Rating,3.3)">33</value>
        <value condition="String.IsEqual(ListItem.Rating,3.4)">34</value>
        <value condition="String.IsEqual(ListItem.Rating,3.5)">35</value>
        <value condition="String.IsEqual(ListItem.Rating,3.6)">36</value>
        <value condition="String.IsEqual(ListItem.Rating,3.7)">37</value>
        <value condition="String.IsEqual(ListItem.Rating,3.8)">38</value>
        <value condition="String.IsEqual(ListItem.Rating,3.9)">39</value>
        <value condition="String.IsEqual(ListItem.Rating,4)">40</value>
        <value condition="String.IsEqual(ListItem.Rating,4.0)">40</value>
        <value condition="String.IsEqual(ListItem.Rating,4.1)">41</value>
        <value condition="String.IsEqual(ListItem.Rating,4.2)">42</value>
        <value condition="String.IsEqual(ListItem.Rating,4.3)">43</value>
        <value condition="String.IsEqual(ListItem.Rating,4.4)">44</value>
        <value condition="String.IsEqual(ListItem.Rating,4.5)">45</value>
        <value condition="String.IsEqual(ListItem.Rating,4.6)">46</value>
        <value condition="String.IsEqual(ListItem.Rating,4.7)">47</value>
        <value condition="String.IsEqual(ListItem.Rating,4.8)">48</value>
        <value condition="String.IsEqual(ListItem.Rating,4.9)">49</value>
        <value condition="String.IsEqual(ListItem.Rating,5)">50</value>
        <value condition="String.IsEqual(ListItem.Rating,5.0)">50</value>
        <value condition="String.IsEqual(ListItem.Rating,5.1)">51</value>
        <value condition="String.IsEqual(ListItem.Rating,5.2)">52</value>
        <value condition="String.IsEqual(ListItem.Rating,5.3)">53</value>
        <value condition="String.IsEqual(ListItem.Rating,5.4)">54</value>
        <value condition="String.IsEqual(ListItem.Rating,5.5)">55</value>
        <value condition="String.IsEqual(ListItem.Rating,5.6)">56</value>
        <value condition="String.IsEqual(ListItem.Rating,5.7)">57</value>
        <value condition="String.IsEqual(ListItem.Rating,5.8)">58</value>
        <value condition="String.IsEqual(ListItem.Rating,5.9)">59</value>
        <value condition="String.IsEqual(ListItem.Rating,6)">60</value>
        <value condition="String.IsEqual(ListItem.Rating,6.0)">60</value>
        <value condition="String.IsEqual(ListItem.Rating,6.1)">61</value>
        <value condition="String.IsEqual(ListItem.Rating,6.2)">62</value>
        <value condition="String.IsEqual(ListItem.Rating,6.3)">63</value>
        <value condition="String.IsEqual(ListItem.Rating,6.4)">64</value>
        <value condition="String.IsEqual(ListItem.Rating,6.5)">65</value>
        <value condition="String.IsEqual(ListItem.Rating,6.6)">66</value>
        <value condition="String.IsEqual(ListItem.Rating,6.7)">67</value>
        <value condition="String.IsEqual(ListItem.Rating,6.8)">68</value>
        <value condition="String.IsEqual(ListItem.Rating,6.9)">69</value>
        <value condition="String.IsEqual(ListItem.Rating,7)">70</value>
        <value condition="String.IsEqual(ListItem.Rating,7.0)">70</value>
        <value condition="String.IsEqual(ListItem.Rating,7.1)">71</value>
        <value condition="String.IsEqual(ListItem.Rating,7.2)">72</value>
        <value condition="String.IsEqual(ListItem.Rating,7.3)">73</value>
        <value condition="String.IsEqual(ListItem.Rating,7.4)">74</value>
        <value condition="String.IsEqual(ListItem.Rating,7.5)">75</value>
        <value condition="String.IsEqual(ListItem.Rating,7.6)">76</value>
        <value condition="String.IsEqual(ListItem.Rating,7.7)">77</value>
        <value condition="String.IsEqual(ListItem.Rating,7.8)">78</value>
        <value condition="String.IsEqual(ListItem.Rating,7.9)">79</value>
        <value condition="String.IsEqual(ListItem.Rating,8)">80</value>
        <value condition="String.IsEqual(ListItem.Rating,8.0)">80</value>
        <value condition="String.IsEqual(ListItem.Rating,8.1)">81</value>
        <value condition="String.IsEqual(ListItem.Rating,8.2)">82</value>
        <value condition="String.IsEqual(ListItem.Rating,8.3)">83</value>
        <value condition="String.IsEqual(ListItem.Rating,8.4)">84</value>
        <value condition="String.IsEqual(ListItem.Rating,8.5)">85</value>
        <value condition="String.IsEqual(ListItem.Rating,8.6)">86</value>
        <value condition="String.IsEqual(ListItem.Rating,8.7)">87</value>
        <value condition="String.IsEqual(ListItem.Rating,8.8)">88</value>
        <value condition="String.IsEqual(ListItem.Rating,8.9)">89</value>
        <value condition="String.IsEqual(ListItem.Rating,9)">90</value>
        <value condition="String.IsEqual(ListItem.Rating,9.0)">90</value>
        <value condition="String.IsEqual(ListItem.Rating,9.1)">91</value>
        <value condition="String.IsEqual(ListItem.Rating,9.2)">92</value>
        <value condition="String.IsEqual(ListItem.Rating,9.3)">93</value>
        <value condition="String.IsEqual(ListItem.Rating,9.4)">94</value>
        <value condition="String.IsEqual(ListItem.Rating,9.5)">95</value>
        <value condition="String.IsEqual(ListItem.Rating,9.6)">96</value>
        <value condition="String.IsEqual(ListItem.Rating,9.7)">97</value>
        <value condition="String.IsEqual(ListItem.Rating,9.8)">98</value>
        <value condition="String.IsEqual(ListItem.Rating,9.9)">99</value>
        <value condition="String.IsEqual(ListItem.Rating,10)">100</value>
        <value condition="String.IsEqual(ListItem.Rating,10.0)">100</value>
        <value>0</value>
    </variable>

    <variable name="Def_Trailer_Delay">
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:03)">$LOCALIZE[30112]</value>
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:06)">$LOCALIZE[30113]</value>
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:09)">$LOCALIZE[31117]</value>
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:14)">$LOCALIZE[31123]</value>
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:19)">$LOCALIZE[31124]</value>
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:29)">$LOCALIZE[31125]</value>
        <value condition="String.IsEqual(Skin.String(Trailer_Delay),00:59)">$LOCALIZE[31126]</value>
        <value>Default</value>
    </variable>

    <include name="Defs_Settings_OnLoad">
        <onload condition="Window.IsActive(interfacesettings)">SetProperty(MenuIconFocus,ReplaceWindow(interfacesettings),Home)</onload>
        <onload condition="Window.IsActive(systemsettings)">SetProperty(MenuIconFocus,ReplaceWindow(systemsettings),Home)</onload>
        <onload condition="Window.IsActive(pvrsettings)">SetProperty(MenuIconFocus,ReplaceWindow(pvrsettings),Home)</onload>
        <onload condition="Window.IsActive(servicesettings)">SetProperty(MenuIconFocus,ReplaceWindow(servicesettings),Home)</onload>
        <onload condition="Window.IsActive(mediasettings)">SetProperty(MenuIconFocus,ReplaceWindow(mediasettings),Home)</onload>
        <onload condition="Window.IsActive(playersettings)">SetProperty(MenuIconFocus,ReplaceWindow(playersettings),Home)</onload>
        <onload condition="Window.IsActive(systeminfo)">SetProperty(MenuIconFocus,ReplaceWindow(systeminfo),Home)</onload>
        <onload condition="Window.IsActive(profiles)">SetProperty(MenuIconFocus,ReplaceWindow(profiles),Home)</onload>
        <onload condition="Window.IsActive(skinsettings)">SetProperty(MenuIconFocus,ReplaceWindow(skinsettings),Home)</onload>

        <onload condition="Window.IsActive(skinsettings)">SetFocus(300,0)</onload>
        <onload condition="Window.IsActive(interfacesettings)">SetFocus(300,1)</onload>
        <onload condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onload>
        <onload condition="Window.IsActive(playersettings)">SetFocus(300,3)</onload>
        <onload condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onload>
        <onload condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onload>
        <onload condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onload>
        <onload condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onload>
        <onload condition="Window.IsActive(profiles)">SetFocus(300,8)</onload>
    </include>

    <include name="Defs_Settings_OnLeft">
        <onleft condition="Window.IsActive(skinsettings)">SetFocus(300,0)</onleft>
        <onleft condition="Window.IsActive(interfacesettings)">SetFocus(300,1)</onleft>
        <onleft condition="Window.IsActive(mediasettings)">SetFocus(300,2)</onleft>
        <onleft condition="Window.IsActive(playersettings)">SetFocus(300,3)</onleft>
        <onleft condition="Window.IsActive(systemsettings)">SetFocus(300,4)</onleft>
        <onleft condition="Window.IsActive(servicesettings)">SetFocus(300,5)</onleft>
        <onleft condition="Window.IsActive(pvrsettings)">SetFocus(300,6)</onleft>
        <onleft condition="Window.IsActive(systeminfo)">SetFocus(300,7)</onleft>
        <onleft condition="Window.IsActive(profiles)">SetFocus(300,8)</onleft>
    </include>

    <include name="Defs_InfoDialog_Visible">
        <visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(1140) + !Window.IsVisible(DialogPVRInfo.xml)</visible>
    </include>

    <!-- Options Menu -->
    <include name="Defs_Options_Texture">
        <control type="image">
            <left>-16</left>
            <right>-16</right>
            <top>-16</top>
            <bottom>-16</bottom>
            <bordertexture border="32">common/dark-shadow-24.png</bordertexture>
            <bordersize>24</bordersize>
            <texture border="16" colordiffuse="dialog_bg_100">common/rounded-dialog.png</texture>
        </control>
    </include>
    <include name="Defs_Options_Grouplist">
        <left>8</left>
        <bottom>-48</bottom>
        <width>450</width>
        <top>16</top>
        <itemgap>0</itemgap>
        <onback condition="!Window.IsVisible(DialogButtonMenu.xml)">50</onback>
        <onleft condition="!Window.IsVisible(DialogButtonMenu.xml)">50</onleft>
        <onright condition="!Window.IsVisible(DialogButtonMenu.xml)">50</onright>
    </include>

    <include name="Defs_Powermenu_Group">
        <height>592</height>
        <centerleft>50%</centerleft>
        <centertop>50%</centertop>
        <width>466</width>
    </include>

    <include name="Defs_Options_StandardButtons">
        <control type="button" id="2">
            <description>Viewmode</description>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="button" id="3">
            <description>Sortby</description>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="button" id="6003">
            <description>Sort By</description>
            <label>$INFO[Control.GetLabel(3)]</label>
            <onclick>SendClick(3)</onclick>
            <visible>Control.IsVisible(3)</visible>
            <visible>Control.IsEnabled(3)</visible>
            <include>Defs_Hidden_Button</include>
        </control>
        <control type="togglebutton" id="4">
            <label>$LOCALIZE[584]</label>
            <altlabel>$LOCALIZE[585]</altlabel>
            <usealttexture>Container.SortDirection(Descending)</usealttexture>
            <include>Defs_Hidden_Button</include>
        </control>
    </include>

    <include name="Defs_Hidden_Button">
        <top>-100</top>
        <visible allowhiddenfocus="true">false</visible>
        <width>1</width>
        <height>1</height>
        <texturefocus />
        <texturenofocus />
        <font />
    </include>

    <!-- Keyboard and Numeric Keys -->
    <include name="Defs_Keyboard_Button">
        <width>85</width>
        <height>75</height>
        <include content="Defs_ButtonType">
            <param name="texturenofocus" value="true" />
            <param name="colordiffuse" value="dialog_fg_12" />
        </include>
        <include content="Defs_ButtonType">
            <param name="texturefocus" value="true" />
        </include>
        <textoffsetx>0</textoffsetx>
        <textcolor>dialog_fg_70</textcolor>
        <focusedcolor>Selected</focusedcolor>
        <radioposx>320</radioposx>
        <radioposy>22</radioposy>
    </include>

    <include name="Defs_ButtonType">
        <param name="texture" default="false" />
        <param name="texturefocus" default="false" />
        <param name="texturenofocus" default="false" />
        <param name="alttexturefocus" default="false" />
        <param name="alttexturenofocus" default="false" />
        <param name="colordiffuse" default="$VAR[ColorHighlight]" />
        <definition>
            <include content="Defs_ButtonType_Texture" condition="!Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[texture]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/button-dialog.png" />
            </include>
            <include content="Defs_ButtonType_TextureFocus" condition="!Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[texturefocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/button-dialog.png" />
            </include>
            <include content="Defs_ButtonType_TextureNoFocus" condition="!Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[texturenofocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/button-dialog.png" />
            </include>
            <include content="Defs_ButtonType_AltTextureFocus" condition="!Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[alttexturefocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/button-dialog.png" />
            </include>
            <include content="Defs_ButtonType_AltTextureNoFocus" condition="!Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[alttexturenofocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/button-dialog.png" />
            </include>

            <include content="Defs_ButtonType_Texture" condition="Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[texture]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/box.png" />
            </include>
            <include content="Defs_ButtonType_TextureFocus" condition="Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[texturefocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/box.png" />
            </include>
            <include content="Defs_ButtonType_TextureNoFocus" condition="Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[texturenofocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/box.png" />
            </include>
            <include content="Defs_ButtonType_AltTextureFocus" condition="Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[alttexturefocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/box.png" />
            </include>
            <include content="Defs_ButtonType_AltTextureNoFocus" condition="Skin.HasSetting(EnableMonochromeHighlight) + $PARAM[alttexturenofocus]">
                <param name="colordiffuse" value="$PARAM[colordiffuse]" />
                <param name="texture" value="common/box.png" />
            </include>
        </definition>
    </include>

    <include name="Defs_ButtonType_Texture">
        <texture colordiffuse="$PARAM[colordiffuse]" border="5">$PARAM[texture]</texture>
    </include>
    <include name="Defs_ButtonType_TextureFocus">
        <texturefocus colordiffuse="$PARAM[colordiffuse]" border="5">$PARAM[texture]</texturefocus>
    </include>
    <include name="Defs_ButtonType_TextureNoFocus">
        <texturenofocus colordiffuse="$PARAM[colordiffuse]" border="5">$PARAM[texture]</texturenofocus>
    </include>
    <include name="Defs_ButtonType_AltTextureFocus">
        <alttexturefocus colordiffuse="$PARAM[colordiffuse]" border="5">$PARAM[texture]</alttexturefocus>
    </include>
    <include name="Defs_ButtonType_AltTextureNoFocus">
        <alttexturenofocus colordiffuse="$PARAM[colordiffuse]" border="5">$PARAM[texture]</alttexturenofocus>
    </include>

    <!-- Context Button -->
    <include name="Defs_Context_Button">
        <align>left</align>
        <textoffsetx>30</textoffsetx>
        <radioposx>400</radioposx>
        <width>450</width>
        <height>item_list_height</height>
        <font>font_tiny</font>
        <textcolor>dialog_fg_70</textcolor>
        <textureradiofocus colordiffuse="dialog_fg_70">buttons/radio-on.png</textureradiofocus>
        <textureradionofocus colordiffuse="dialog_fg_30">buttons/radio-off.png</textureradionofocus>
        <focusedcolor>Selected</focusedcolor>
        <alttexturefocus>special://userdata/addon_data/script.skinhelper/button_texture.png</alttexturefocus>
        <texturefocus>special://userdata/addon_data/script.skinhelper/button_texture.png</texturefocus>
    </include>

    <include name="Defs_SettingsTrick">
        <control type="button">
            <visible allowhiddenfocus="true">false</visible>
            <onfocus condition="!Window.IsActive(InterfaceSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(InterfaceSettings))">ReplaceWindow(InterfaceSettings)</onfocus>
            <onfocus condition="!Window.IsActive(SkinSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(SkinSettings))">ReplaceWindow(SkinSettings)</onfocus>
            <onfocus condition="!Window.IsActive(MediaSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(MediaSettings))">ReplaceWindow(MediaSettings)</onfocus>
            <onfocus condition="!Window.IsActive(PlayerSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(PlayerSettings))">ReplaceWindow(PlayerSettings)</onfocus>
            <onfocus condition="!Window.IsActive(SystemSettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(SystemSettings))">ReplaceWindow(SystemSettings)</onfocus>
            <onfocus condition="!Window.IsActive(servicesettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(servicesettings))">ReplaceWindow(servicesettings)</onfocus>
            <onfocus condition="!Window.IsActive(pvrsettings) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(pvrsettings))">ReplaceWindow(pvrsettings)</onfocus>
            <onfocus condition="!Window.IsActive(systeminfo) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(systeminfo))">ReplaceWindow(systeminfo)</onfocus>
            <onfocus condition="!Window.IsActive(Profiles) + String.IsEqual(Container(300).ListItem.Property(path),ReplaceWindow(Profiles))">ReplaceWindow(Profiles)</onfocus>
        </control>
    </include>

    <include name="Defs_Settings_Background">
        <!-- <control type="image">
            <animation type="WindowOpen" reversible="false" condition="!Window.Previous(SettingsCategory.xml) + !Window.Previous(SkinSettings.xml) + !Window.Previous(SettingsProfile.xml) + !Window.Previous(SettingsSystemInfo.xml)">
                <effect type="fade" start="0" end="100" time="300" delay="0"/>
            </animation>
            <include>Dimensions_Fullscreen</include>
            <texture border="2">common/black-back.png</texture>
        </control> -->
        <!-- <include content="Topbar">
            <param name="fgcolor" value="panel_fg" />
        </include> -->
        <include>Topbar</include>
        <include condition="!Window.Previous(home)">View_Settings</include>
        <include content="Object_Settings_Info">
            <param name="visible" value="Control.HasFocus(300) | !Window.IsVisible(SettingsCategory.xml)" />
            <param name="id" value="5800" />
            <param name="label" value="$VAR[Label_Settings_Information]" />
        </include>
    </include>

    <include name="Defs_Settings_Changer">
        <definition>
            <control type="list" id="300">
                <nested />
                <top>39</top>
                <bottom>dialog_pad</bottom>
                <width>item_list_height</width>
                <orientation>vertical</orientation>
                <itemlayout height="item_list_height" width="item_list_height">
                    <control type="group">
                        <width>item_list_height</width>
                        <control type="image">
                            <centerleft>50%</centerleft>
                            <centertop>50%</centertop>
                            <width>60</width>
                            <height>60</height>
                            <texture colordiffuse="dialog_fg_30">$INFO[ListItem.Icon]</texture>
                        </control>
                    </control>
                    <control type="label">
                        <left>item_list_height</left>
                        <label>$INFO[ListItem.Label]</label>
                        <font>font_small</font>
                        <textcolor>dialog_fg_70</textcolor>
                    </control>
                </itemlayout>
                <focusedlayout height="item_list_height" width="item_list_height">
                    <include>Defs_SettingsTrick</include>
                    <control type="image">
                        <texture>special://userdata/addon_data/script.skinhelper/button_texture.png</texture>
                    </control>
                    <control type="group">
                        <width>item_list_height</width>
                        <control type="image">
                            <centerleft>50%</centerleft>
                            <centertop>50%</centertop>
                            <width>60</width>
                            <height>60</height>
                            <texture colordiffuse="Selected">$INFO[ListItem.Icon]</texture>
                        </control>
                    </control>
                    <control type="label">
                        <left>item_list_height</left>
                        <label>$INFO[ListItem.Label]</label>
                        <font>font_small</font>
                        <textcolor>Selected</textcolor>
                    </control>
                </focusedlayout>
                <include>Items_Settings</include>
            </control>
        </definition>
    </include>
    <!-- Settings Buttons -->
    <variable name="Defs_Settings_ToggleButton_Color">
        <value condition="Control.HasFocus(300) | Control.HasFocus(20)">00ffffff</value>
        <value>$VAR[ColorGradient]</value>
    </variable>
    <variable name="Defs_Settings_ToggleButton_Text">
        <value condition="Control.HasFocus(300) | Control.HasFocus(20)">dialog_fg_70</value>
        <value>Selected</value>
    </variable>
    <include name="Defs_Settings_Button">
        <align>left</align>
        <font>font_small</font>
        <radioposx>1225</radioposx>
        <height>item_list_height</height>
        <textoffsetx>30</textoffsetx>
        <focusedcolor>$VAR[Defs_Settings_ToggleButton_Text]</focusedcolor>
    </include>
    <include name="Defs_RadioButton_NoTexture">
        <textureradioondisabled />
        <textureradiooffdisabled />
        <textureradioonfocus />
        <textureradioofffocus />
        <textureradioonnofocus />
        <textureradiooffnofocus />
    </include>
    <!-- Shadows -->
    <include name="Defs_Shadow_24">
        <left>-24</left>
        <right>-24</right>
        <top>-24</top>
        <bottom>-24</bottom>
        <bordersize>24</bordersize>
        <bordertexture border="32">common/shadow-24.png</bordertexture>
    </include>

    <!-- Busy Spinner -->
    <include name="Defs_BusySpinner">
        <param name="label" default="$LOCALIZE[20186]..." />
        <param name="textcolor" default="ffededed" />
        <definition>
            <control type="group">
                <height>170</height>
                <width>720</width>
                <centerleft>50%</centerleft>
                <centertop>50%</centertop>
                <control type="image">
                    <description>Busy animation</description>
                    <centerleft>50%</centerleft>
                    <top>0</top>
                    <width>100</width>
                    <height>100</height>
                    <texture>dialog/loading-back.png</texture>
                    <aspectratio>keep</aspectratio>
                </control>
                <control type="group">
                    <description>Busy animation</description>
                    <centerleft>50%</centerleft>
                    <top>0</top>
                    <width>100</width>
                    <height>100</height>
                    <animation effect="rotate" condition="true" start="360" end="0" loop="true" time="1000" center="auto">Conditional</animation>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight]">dialog/loading-spinner.png</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorGradient]">dialog/loading-spinner.png</texture>
                        <aspectratio>keep</aspectratio>
                        <animation effect="fade" condition="true" start="75" end="0" pulse="true" time="1000">Conditional</animation>
                        <visible>!Skin.HasSetting(EnableMonochromeHighlight)</visible>
                    </control>
                </control>
                <control type="label">
                    <description>Busy label</description>
                    <centerleft>50%</centerleft>
                    <bottom>0</bottom>
                    <width>720</width>
                    <height>100</height>
                    <aligny>center</aligny>
                    <align>center</align>
                    <label>$PARAM[label]</label>
                    <textcolor>$PARAM[textcolor]</textcolor>
                </control>
            </control>
        </definition>
    </include>

    <!-- Small Busy Spinner -->
    <include name="Defs_SmallBusySpinner">
        <definition>
            <control type="group">
                <centerleft>50%</centerleft>
                <centertop>50%</centertop>
                <control type="group">
                    <description>Busy animation</description>
                    <centerleft>50%</centerleft>
                    <top>0</top>
                    <width>42</width>
                    <height>42</height>
                    <animation effect="rotate" condition="true" start="360" end="0" loop="true" time="1000" center="auto">Conditional</animation>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorHighlight]">dialog/loading-spinner.png</texture>
                        <aspectratio>keep</aspectratio>
                    </control>
                    <control type="image">
                        <texture colordiffuse="$VAR[ColorGradient]">dialog/loading-spinner.png</texture>
                        <aspectratio>keep</aspectratio>
                        <animation effect="fade" condition="true" start="75" end="0" pulse="true" time="1000">Conditional</animation>
                        <visible>!Skin.HasSetting(EnableMonochromeHighlight)</visible>
                    </control>
                </control>
            </control>
        </definition>
    </include>

</includes>
