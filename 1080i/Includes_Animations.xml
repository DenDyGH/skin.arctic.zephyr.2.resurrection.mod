<?xml version="1.0" encoding="UTF-8"?>
<includes>
    <include name="Animation_Home_MenuFlip">
        <animation type="Visible">
            <effect type="fade" start="0" end="100" time="200" tween="sine" easing="in" delay="200" />
            <effect type="slide" start="0,-30" end="0,0" time="250" tween="sine" easing="out" delay="200" />
        </animation>
        <animation type="Hidden">
            <effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
            <effect type="slide" start="0,0" end="0,-30" time="200" tween="sine" easing="out" />
        </animation>
    </include>

    <include name="Animation_Home_MenuFlip_Conditional">
        <animation type="Conditional" condition="$PARAM[condition]" reversible="false">
            <effect type="fade" start="0" end="100" time="200" tween="sine" easing="in" delay="200" />
            <effect type="slide" start="0,-30" end="0,0" time="250" tween="sine" easing="out" delay="200" />
        </animation>
        <animation type="Conditional" condition="!$PARAM[condition]" reversible="false">
            <effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
            <effect type="slide" start="0,0" end="0,-30" time="200" tween="sine" easing="out" />
        </animation>
    </include>

    <include name="Animation_Settings">
        <animation type="WindowOpen" reversible="false" condition="!Window.Previous(SettingsCategory.xml) + !Window.Previous(SkinSettings.xml) + !Window.Previous(SettingsProfile.xml) + !Window.Previous(SettingsSystemInfo.xml)">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
    </include>

    <include name="Animation_Down">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
            <effect type="slide" start="0,320" end="0" time="400" tween="cubic" easing="out" />
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="0,320" time="300" tween="cubic" easing="out" />
        </animation>
    </include>

    <include name="Animation_Common">
        <animation type="WindowOpen" reversible="false" condition="!Window.Previous(SettingsCategory.xml) + !Window.Previous(SettingsSystemInfo.xml) + !Window.Previous(SkinSettings.xml) + !Window.Previous(SettingsProfile.xml) + !Window.Previous(eventlog)">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
            <effect type="zoom" start="50" end="100" time="300" center="auto" tween="quadratic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="!Window.Next(SettingsCategory.xml) + !Window.Next(SettingsSystemInfo.xml) + !Window.Next(SkinSettings.xml) + !Window.Next(SettingsProfile.xml) + !Window.Next(eventlog)">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out" />
            <effect type="zoom" end="75" start="100" time="200" center="auto" tween="quadratic" easing="in" />
        </animation>

        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="300" tween="sine" easing="in" />
            <effect type="zoom" start="115" end="100" time="300" delay="300" center="auto" tween="sine" easing="out" />
        </animation>

        <animation type="Hidden" reversible="false" condition="[![!Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(DialogPVRInfo.xml) + !Window.IsVisible(DialogPVRGuideInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogVideoInfo.xml)]]">
            <effect type="zoom" start="100" end="85" center="auto" tween="sine" delay="0" easing="out" time="300" />
            <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="300" />
        </animation>
    </include>

    <include name="Animation_Common_Home">
        <animation type="WindowOpen" reversible="false" condition="[Control.HasFocus(302) | Control.HasFocus(5610)] + Control.IsVisible(302) + String.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),5610)">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
            <effect type="zoom" start="50" end="100" time="300" center="auto" tween="quadratic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="[Control.HasFocus(302) | Control.HasFocus(5610)] + Control.IsVisible(302) + String.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),5610)">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out" />
            <effect type="zoom" end="75" start="100" time="200" center="auto" tween="quadratic" easing="in" />
        </animation>

        <animation type="WindowOpen" reversible="false" condition="![[Control.HasFocus(302) | Control.HasFocus(5610)] + Control.IsVisible(302) + String.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),5610)]">
            <effect type="fade" start="0" end="100" time="300" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="![[Control.HasFocus(302) | Control.HasFocus(5610)] + Control.IsVisible(302) + String.IsEqual(Window(Home).Property(TMDbHelper.WidgetContainer),5610)]">
            <effect type="fade" end="0" start="100" time="300" />
        </animation>

        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="300" tween="sine" easing="in" />
            <effect type="zoom" start="115" end="100" time="300" delay="300" center="auto" tween="sine" easing="out" />
        </animation>

        <animation type="Hidden" reversible="false" condition="![!Window.IsVisible(script-globalsearch-main.xml) + !Window.IsVisible(script-globalsearch-infodialog.xml) + !Window.IsVisible(DialogAddonInfo.xml) + !Window.IsVisible(DialogPVRInfo.xml) + !Window.IsVisible(DialogPVRGuideInfo.xml) + !Window.IsVisible(DialogMusicInfo.xml) + !Window.IsVisible(DialogVideoInfo.xml)]">
            <effect type="zoom" start="100" end="85" center="auto" tween="sine" delay="0" easing="out" time="300" />
            <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="300" />
        </animation>
    </include>

    <include name="Animation_Common_Delay">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="400" tween="sine" easing="in" />
            <effect type="zoom" start="50" end="100" time="300" delay="400" center="auto" tween="quadratic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" end="0" start="100" time="200" tween="sine" easing="out" />
            <effect type="zoom" end="75" start="100" time="200" center="auto" tween="quadratic" easing="in" />
        </animation>

        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="400" tween="sine" easing="in" />
            <effect type="zoom" start="115" end="100" time="300" delay="400" center="auto" tween="sine" easing="out" />
        </animation>

        <animation type="Hidden" reversible="false">
            <effect type="zoom" start="100" end="85" center="auto" tween="sine" delay="0" easing="out" time="300" />
            <effect type="fade" start="100" end="0" tween="cubic" easing="out" delay="0" time="300" />
        </animation>

    </include>

    <include name="Animation_Left">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
            <effect type="slide" start="-320" end="0" time="400" tween="cubic" easing="out" />
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="-320" time="300" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
            <effect type="slide" start="-320" end="0" time="400" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="-320" time="300" tween="cubic" easing="out" />
        </animation>
    </include>

    <include name="Animation_Right">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
            <effect type="slide" start="320" end="0" time="400" tween="cubic" easing="out" />
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="out"/>
            <effect type="slide" start="320" end="0" time="400" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
        </animation>
    </include>

    <include name="Animation_Left_Delay">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="400" tween="sine" easing="out"/>
            <effect type="slide" start="-320" end="0" time="400" delay="400" tween="cubic" easing="out" />
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="-320" time="300" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="400" tween="sine" easing="out"/>
            <effect type="slide" start="-320" end="0" time="400" delay="400" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="!String.IsEmpty(Window(Home).Property(InfoTrick.Active))">
            <effect type="fade" start="100" end="0" time="300" delay="400" tween="sine" easing="out" />
            <effect type="slide" start="0" end="-320" time="300" delay="400" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="String.IsEmpty(Window(Home).Property(InfoTrick.Active))">
            <effect type="fade" start="100" end="0" time="300" delay="0" tween="sine" easing="out" />
            <effect type="slide" start="0" end="-320" time="300" delay="0" tween="cubic" easing="out" />
        </animation>
    </include>

    <include name="Animation_Right_Delay">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="400" tween="sine" easing="out"/>
            <effect type="slide" start="320" end="0" time="400" delay="400" tween="cubic" easing="out" />
        </animation>
        <animation type="Hidden" reversible="false">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="400" tween="sine" easing="out"/>
            <effect type="slide" start="320" end="0" time="400" delay="400" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="String.IsEmpty(Window(Home).Property(InfoTrick.Active))">
            <effect type="fade" start="100" end="0" time="300" tween="sine" easing="out" />
            <effect type="slide" start="0" end="320" time="300" tween="cubic" easing="out" />
        </animation>
        <animation type="WindowClose" reversible="false" condition="!String.IsEmpty(Window(Home).Property(InfoTrick.Active))">
            <effect type="fade" start="100" end="0" time="300" delay="400" tween="sine" easing="out" />
            <effect type="slide" start="0" end="320" time="300" delay="400" tween="cubic" easing="out" />
        </animation>
    </include>

    <include name="Animation_FadeInOut">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">Visible</animation>
        <animation effect="fade" start="100" end="0" time="350" tween="cubic" easing="inout">Hidden</animation>
    </include>

    <include name="Animation_FadeIn">
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">Visible</animation>
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout">WindowOpen</animation>
    </include>

    <include name="Animation_FadeIn_Delay">
        <animation effect="fade" start="0" end="100" time="400" tween="cubic" easing="inout" reversible="false" delay="400">Visible</animation>
        <animation effect="fade" start="0" end="100" time="400" tween="cubic" easing="inout" reversible="false" delay="400">WindowOpen</animation>
    </include>

    <include name="Animation_Info_Fade_Delay">
        <animation type="Conditional" condition="Control.HasFocus(8000) + !String.IsEmpty(Window.Property(windowopen))">
            <effect type="fade" start="100" end="0" time="1" delay="0" />
        </animation>
    </include>

    <include name="Animation_ZoomIn">
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
            <effect type="zoom" start="80" end="100" time="300" center="auto" tween="quadratic" easing="out" />
        </animation>
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" tween="sine" easing="in" />
            <effect type="zoom" start="80" end="100" time="300" center="auto" tween="quadratic" easing="out" />
        </animation>
    </include>

    <include name="Animation_FadeIn_Slide">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,-48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
    </include>
    <include name="Animation_FadeIn_SlideUp">
        <animation type="Visible" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
        <animation type="WindowOpen" reversible="false">
            <effect type="fade" start="0" end="100" time="300" delay="150"/>
            <effect type="slide" start="0,48" end="0" center="auto" tween="back" easing="out" time="450" delay="150"/>
        </animation>
    </include>

    <include name="Animation_FadeOut">
        <animation effect="fade" end="0" start="100" time="150">Hidden</animation>
        <animation effect="fade" end="0" start="100" time="150">WindowClose</animation>
    </include>

    <include name="Animation_Flix_Widget_Slide">
        <animation effect="slide" end="0,-400" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,2)">Conditional</animation>
        <animation effect="slide" end="0,-220" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,3)">Conditional</animation>
        <animation effect="slide" end="0,-195" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,4)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,5)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,6)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,7)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,8)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,9)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,10)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,11)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,12)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,13)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,14)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,15)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,16)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,17)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,18)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,19)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,20)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,21)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,22)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,23)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,24)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,25)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,26)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,27)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,28)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,29)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,30)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,31)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,32)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,33)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,34)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,35)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,36)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,37)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,38)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,39)">Conditional</animation>
        <animation effect="slide" end="0,-205" time="600" tween="cubic" easing="inout" reversible="true" condition="Integer.IsGreater(Container(3000).Position,40)">Conditional</animation>
    </include>

    <include name="Animation_Flix_AlarmDelay">
        <animation effect="slide" end="0,0" time="3000" reversible="false" condition="String.IsEmpty(Skin.String(Trailer_Delay))">Focus</animation>
        <animation effect="slide" end="0,0" time="3000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:03)">Focus</animation>
        <animation effect="slide" end="0,0" time="6000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:06)">Focus</animation>
        <animation effect="slide" end="0,0" time="9000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:09)">Focus</animation>
        <animation effect="slide" end="0,0" time="14000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:14)">Focus</animation>
        <animation effect="slide" end="0,0" time="19000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:19)">Focus</animation>
        <animation effect="slide" end="0,0" time="29000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:29)">Focus</animation>
        <animation effect="slide" end="0,0" time="59000" reversible="false" condition="String.IsEqual(Skin.String(Trailer_Delay),00:59)">Focus</animation>
    </include>

    <include name="Animation_Alpha_Value">
        <animation effect="fade" start="0" end="0" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),100)">Visible</animation>
        <animation effect="fade" start="0" end="0" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),100)">WindowOpen</animation>
        <animation effect="fade" start="0" end="5" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),95)">Visible</animation>
        <animation effect="fade" start="0" end="5" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),95)">WindowOpen</animation>
        <animation effect="fade" start="0" end="10" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),90)">Visible</animation>
        <animation effect="fade" start="0" end="10" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),90)">WindowOpen</animation>
        <animation effect="fade" start="0" end="15" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),85)">Visible</animation>
        <animation effect="fade" start="0" end="15" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),85)">WindowOpen</animation>
        <animation effect="fade" start="0" end="20" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),80)">Visible</animation>
        <animation effect="fade" start="0" end="20" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),80)">WindowOpen</animation>
        <animation effect="fade" start="0" end="25" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),75)">Visible</animation>
        <animation effect="fade" start="0" end="25" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),75)">WindowOpen</animation>
        <animation effect="fade" start="0" end="30" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),70)">Visible</animation>
        <animation effect="fade" start="0" end="30" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),70)">WindowOpen</animation>
        <animation effect="fade" start="0" end="35" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),65)">Visible</animation>
        <animation effect="fade" start="0" end="35" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),65)">WindowOpen</animation>
        <animation effect="fade" start="0" end="40" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),60)">Visible</animation>
        <animation effect="fade" start="0" end="40" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),60)">WindowOpen</animation>
        <animation effect="fade" start="0" end="45" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),55)">Visible</animation>
        <animation effect="fade" start="0" end="45" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),55)">WindowOpen</animation>
        <animation effect="fade" start="0" end="50" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),50)">Visible</animation>
        <animation effect="fade" start="0" end="50" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),50)">WindowOpen</animation>
        <animation effect="fade" start="0" end="55" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),45)">Visible</animation>
        <animation effect="fade" start="0" end="55" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),45)">WindowOpen</animation>
        <animation effect="fade" start="0" end="60" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),40)">Visible</animation>
        <animation effect="fade" start="0" end="60" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),40)">WindowOpen</animation>
        <animation effect="fade" start="0" end="65" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),35)">Visible</animation>
        <animation effect="fade" start="0" end="65" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),35)">WindowOpen</animation>
        <animation effect="fade" start="0" end="70" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),30)">Visible</animation>
        <animation effect="fade" start="0" end="70" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),30)">WindowOpen</animation>
        <animation effect="fade" start="0" end="75" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),25)">Visible</animation>
        <animation effect="fade" start="0" end="75" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),25)">WindowOpen</animation>
        <animation effect="fade" start="0" end="80" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),20)">Visible</animation>
        <animation effect="fade" start="0" end="80" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),20)">WindowOpen</animation>
        <animation effect="fade" start="0" end="85" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),15)">Visible</animation>
        <animation effect="fade" start="0" end="85" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),15)">WindowOpen</animation>
        <animation effect="fade" start="0" end="90" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),10)">Visible</animation>
        <animation effect="fade" start="0" end="90" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),10)">WindowOpen</animation>
        <animation effect="fade" start="0" end="95" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),5)">Visible</animation>
        <animation effect="fade" start="0" end="95" time="350" tween="cubic" easing="inout" condition="String.IsEqual(Skin.String(AlphaValue),5)">WindowOpen</animation>
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" condition="String.IsEmpty(Skin.String(AlphaValue)) | String.IsEqual(Skin.String(AlphaValue),0)">Visible</animation>
        <animation effect="fade" start="0" end="100" time="350" tween="cubic" easing="inout" condition="String.IsEmpty(Skin.String(AlphaValue)) | String.IsEqual(Skin.String(AlphaValue),0)">WindowOpen</animation>
    </include>

    <include name="Alpha_Value_Highlight">
        <animation effect="fade" time="0" end="0" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),100)">Conditional</animation>
        <animation effect="fade" time="0" end="5" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),95)">Conditional</animation>
        <animation effect="fade" time="0" end="10" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),90)">Conditional</animation>
        <animation effect="fade" time="0" end="15" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),85)">Conditional</animation>
        <animation effect="fade" time="0" end="20" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),80)">Conditional</animation>
        <animation effect="fade" time="0" end="25" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),75)">Conditional</animation>
        <animation effect="fade" time="0" end="30" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),70)">Conditional</animation>
        <animation effect="fade" time="0" end="35" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),65)">Conditional</animation>
        <animation effect="fade" time="0" end="40" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),60)">Conditional</animation>
        <animation effect="fade" time="0" end="45" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),55)">Conditional</animation>
        <animation effect="fade" time="0" end="50" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),50)">Conditional</animation>
        <animation effect="fade" time="0" end="55" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),45)">Conditional</animation>
        <animation effect="fade" time="0" end="60" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),40)">Conditional</animation>
        <animation effect="fade" time="0" end="65" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),35)">Conditional</animation>
        <animation effect="fade" time="0" end="70" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),30)">Conditional</animation>
        <animation effect="fade" time="0" end="75" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),25)">Conditional</animation>
        <animation effect="fade" time="0" end="80" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),20)">Conditional</animation>
        <animation effect="fade" time="0" end="85" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),15)">Conditional</animation>
        <animation effect="fade" time="0" end="90" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),10)">Conditional</animation>
        <animation effect="fade" time="0" end="95" condition="String.IsEqual(Skin.String(AlphaValue_Highlight),5)">Conditional</animation>
        <animation effect="fade" time="0" end="100" condition="String.IsEmpty(Skin.String(AlphaValue_Highlight)) | String.IsEqual(Skin.String(AlphaValue_Highlight),0)">Conditional</animation>
    </include>

</includes>
